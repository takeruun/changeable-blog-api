// Code generated by MockGen. DO NOT EDIT.
// Source: usecases/repository/blogs_repository.go

// Package mock_repository is a generated GoMock package.
package mock_repository

import (
	entity "app/entity"
	model "app/graphql/model"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockBlogsRepository is a mock of BlogsRepository interface.
type MockBlogsRepository struct {
	ctrl     *gomock.Controller
	recorder *MockBlogsRepositoryMockRecorder
}

// MockBlogsRepositoryMockRecorder is the mock recorder for MockBlogsRepository.
type MockBlogsRepositoryMockRecorder struct {
	mock *MockBlogsRepository
}

// NewMockBlogsRepository creates a new mock instance.
func NewMockBlogsRepository(ctrl *gomock.Controller) *MockBlogsRepository {
	mock := &MockBlogsRepository{ctrl: ctrl}
	mock.recorder = &MockBlogsRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBlogsRepository) EXPECT() *MockBlogsRepositoryMockRecorder {
	return m.recorder
}

// Find mocks base method.
func (m *MockBlogsRepository) Find(id int) (*entity.Blog, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Find", id)
	ret0, _ := ret[0].(*entity.Blog)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Find indicates an expected call of Find.
func (mr *MockBlogsRepositoryMockRecorder) Find(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Find", reflect.TypeOf((*MockBlogsRepository)(nil).Find), id)
}

// FindAll mocks base method.
func (m *MockBlogsRepository) FindAll(params *model.PageCondition) ([]*entity.Blog, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindAll", params)
	ret0, _ := ret[0].([]*entity.Blog)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindAll indicates an expected call of FindAll.
func (mr *MockBlogsRepositoryMockRecorder) FindAll(params interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindAll", reflect.TypeOf((*MockBlogsRepository)(nil).FindAll), params)
}

// TotalCount mocks base method.
func (m *MockBlogsRepository) TotalCount() (int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "TotalCount")
	ret0, _ := ret[0].(int64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// TotalCount indicates an expected call of TotalCount.
func (mr *MockBlogsRepositoryMockRecorder) TotalCount() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "TotalCount", reflect.TypeOf((*MockBlogsRepository)(nil).TotalCount))
}
